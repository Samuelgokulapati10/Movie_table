const express = require("express");
const { open } = require("sqlite");
const sqlite3 = require("sqlite3");
const path = require("path");

const databasePath = path.join(__dirname, "movie.db");

const app = express();

app.use(express.json());

let database = null;

const initializeDbAndServer = async () => {
  try {
    database = await open({
      filename: databasePath,
      driver: sqlite3.Database,
    });
    app.listen(3000, () =>
      console.log("Server Running at http://localhost:3000/")
    );
  } catch (error) {
    console.log(`DB Error: ${error.message}`);
    process.exit(1);
  }
};

initializeDbAndServer();

const convertDbObjectToResponseObject = (dbObject) => {
  return {
    name: dbObject.name,
    img: dbObject.img,
    summary: dbObject.summary,
  };
};
//// POST API

app.post("/movies/", async (request, response) => {
  const { name, img, summary } = request.body;
  const postMovieQuery = `
  INSERT INTO
    movie_table (name, img, summary)
  VALUES
    ('${name}', ${img}, '${summary}');`;
  const movie = await database.run(postMovieQuery);
  response.send("movies Details Added Successful");
});

///GET API

app.get("/movies/:movieId/", async (request, response) => {
  const { movieId } = request.params;
  const getMovieQuery = `
    SELECT 
      * 
    FROM 
      movie_table 
    WHERE 
      movie_id = ${movieId};`;
  const movieDetails = await database.get(getMovieQuery);
  response.send(convertDbObjectToResponseObject(movieDetails));
});

////DELETE API

app.delete("/movies/:movieId/", async (request, response) => {
  const { movieId } = request.params;
  const deleteMovieQuery = `
  DELETE FROM
    movie_table
  WHERE
    movie_id = ${movieId};`;
  await database.run(deleteMovieQuery);
  response.send("Movie Removed");
});
module.exports = app;
